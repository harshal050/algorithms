{"name":"B. Large Addition","group":"Codeforces - Codeforces Global Round 26","url":"https://codeforces.com/contest/1984/problem/B","interactive":false,"memoryLimit":256,"timeLimit":1000,"tests":[{"id":1717957101166,"input":"\n                                                                                /*  यदा यदा हि धर्मस्य ग्लानिर्भवति भारत। \n                                                                                    अभ्युत्थानमधर्मस्य तदात्मानं सृजाम्यहम् \n                                                                                    परित्राणाय साधूनां विनाशाय च दुष्कृताम् ।\n                                                                                    धर्मसंस्थापनार्थाय सम्भवायुगे युगे  */\n                                        \n\n                                        #include<bits/stdc++.h> \n                                        using namespace std; \n                                        \n                                        /**********************   Template Start  *************************/\n                                        \n                                        #define endl \"\\n\"\n                                        // #define int                                     long long\n                                        #define vi                                      vector<int> \n                                        #define vb                                      vector<bool>\n                                        #define vvi                                     vector<vector<int>> \n                                        #define vvb                                     vector<vector<bool>>\n                                        #define pb                                      push_back\n                                        #define pob                                     pop_back\n                                        #define rep(x, i, y)                            for(int i = x; i < y; i++)\n                                        #define all(a)                                  a.begin(), a.end()\n                                        #define mapi                                     map<int,int>\n                                        #define seti                                     set<int>\n                                        #define umapi                                    unordered_map<int,int>\n                                        #define useti                                    unordered_set<int>\n                                        #define mapc                                     map<int,char>\n                                        #define setc                                     set<char>\n                                        #define umapc                                    unordered_map<int,char>\n                                        #define usetc                                    unordered_set<char>\n                                        #define pq                                      priority_queue<int> \n                                        #define pqG                                     priority_queue<int, vector<int>, greater<int>>\n                                        #define ff                                      first\n                                        #define ss                                      second\n                                        #define all(a)                                  a.begin(), a.end()\n                                        #define srt(a)                                 sort(a.begin(), a.end())\n                                        #define srtrev(a)                              sort(a.rbegin(), a.rend())\n                                        #define prdouble(x)                             cout << fixed << setprecision(10) << x\n                                        #define c(x)                                   {cout << x << endl;} \n                                        \n                                        /**************************/\n                                        \n                                        #define int long long int\n                                        #define llu unsigned long long\n                                        // #define endl '\\n'\n                                        \n                                        /**************************/\n                                        // const int aaa[100000+1];\n                                        const int NN = 2*1e5;\n                                        vi aaa(NN, 0);\n\n                                        #define f(i,n) for(int i=0;i<n;i++)\n                                        #define rf(i,n) for(int i=n-1;i>=0;i--)\n                                        #define f1(i,n) for(int i=1;i<=n;i++)\n                                        #define rf1(i,n) for(int i=n;i>=1;i--)\n                                        \n                                        \n                                        /**************************/\n\n                                        void revstr(string& str){ int n = str.length(); for (int i = 0; i < n / 2; i++) swap(str[i], str[n - i - 1]); }\n                                        \n                                        /**************************/\n                                        \n\n                                        #define con continue\n                                        #define S second\n                                        #define F first\n                                        #define pb push_back\n                                        #define pob pop_back\n                                        #define el endl\n                                        #define yes cout << \"YES\" << endl\n                                        #define no cout << \"NO\" << endl\n                                        #define mkn int n;cin >> n;\n                                        #define mkx int x;cin >> x;\n                                        #define mks string s;cin>>s;\n                                        #define mkab int a,b;cin>>a>>b;\n                                        #define mkabc int a,b,c;cin>>a>>b>>c;\n                                        #define mkabcd int a,b,c,d;cin>>a>>b>>c>>d;\n                                        \n                                        \n                                        // /-----------------------------------------/\n                                        \n                                        \n                                        string dc(int n)\n                                        {\n                                            string v=to_string(n);\n                                            return v;\n                                        }\n                                        \n                                        \n                                        // /-----------------------------------------/\n                                        \n                                        const int M = 1000000007;\n                                        const int mod =  998244353;\n                                        \n                                        const int prime_N = 1e6;\n                                        vb isPrime(prime_N, false);\n                                        vi lp(prime_N, 0);\n                                        vi hp(prime_N, 0);\n                                        \n                                        const int fact_N = 1e6;\n                                        vi fact(fact_N);\n                                        \n                                        void __print(int x) { cerr << x; }\n                                        void __print(double x) { cerr << x; }\n                                        void __print(long double x) { cerr << x; }\n                                        void __print(char x) { cerr << '\\'' << x << '\\''; }\n                                        void __print(const char *x) { cerr << '\\\"' << x << '\\\"'; }\n                                        void __print(const string &x) { cerr << '\\\"' << x << '\\\"'; }\n                                        void __print(bool x) { cerr << (x ? \"True\" : \"False\"); }\n                                        void __print(vector<int> a) { for (auto x : a) cerr << x << \" \"; cerr << endl; }\n                                        void __print(set<int> s) { for (auto x : s) cerr << x << \" \"; cerr << endl; }\n                                        void __print(map<int, int> mp) { for (auto x : mp) cerr << x.ff << \" \" << x.ss << endl; cerr << endl; }\n                                        \n\n                                        vi vp; \n                                        const int prime_NN = 1e6;\n                                        void prime(){\n                                            vector<bool>prm(prime_NN+1,true);\n                                            prm[0]=prm[1]=0;\n                                            for(int i=2;i*i<=prime_NN;i++){\n                                                if(prm[i]==true){\n                                                    for(int  j= i*i;j<=prime_NN;j+=i){\n                                                        prm[j] = false;\n                                                    } \n                                                }\n                                            }\n                                            \n                                            for(int i =2;i<=prime_NN;i++){\n                                                if(prm[i]) vp.pb(i);\n                                            }\n                                        }\n                                        \n                                        \n\n                                        int _ceil(int a,int b){\n                                        if(a%b==0){\n                                            return a/b;\n                                        }else{\n                                            return a/b + 1;\n                                        }\n                                        }\n\n\n                                        int cnt_bit(int n){\n                                        int c=0;\n                                        while(n){\n                                            n&=n-1;\n                                            c++;\n                                        }\n                                        return c;\n                                        } \n                                        \n                                        void pri(vi v) { rep(0, i, v.size()) { cout << v[i] << \" \"; } cout << endl;}\n                                        vector<int> in(int n) { vector<int> a(n); rep(0, i, n) cin >> a[i]; return a; }\n                                        set<int> input_set(int n) { set<int> s; rep(0, i, n) { int x; cin >> x; s.insert(x); } return s; }\n                                        multiset<int> input_multiset(int n) { multiset<int> ms; rep(0, i, n) { int x; cin >> x; ms.insert(x); } return ms; }\n                                        vi prime_factors(int n) { vi prime; for(int i = 2; i*i <= n; i++) { while(n % i == 0) { prime.pb(i);  n /= i; } } if(n > 1) { prime.pb(n); } return prime; }\n                                        vi divisors(int n) { vi v; for(int i = 1; i*i <= n; i++) { if(n % i == 0) { v.pb(i); if(i != n / i) { v.pb(n / i); } } } return v; }\n                                        int gcd(int a, int b) { if(b == 0) { return a; } return gcd(b, a%b); }\n                                        long long binMultiply(long long a, long long b, long long mod) { long long ans = 0; a = (a % mod); while(b > 0) { if(b & 1) { ans = (ans + a) % mod; } a = (a + a) % mod; b = b >> 1; } return ans; }\n                                        int lcm(int a, int b) { return (a*b) / gcd(a, b); }\n                                        int binExp(int a, int b, int mod) { int ans = 1; while(b > 0) { if(b & 1) { ans = (ans * 1LL * a) % mod; } a = (a * 1LL * a) % mod; b = b >> 1; } return ans; }\n                                        int ncr(int n, int r) { int ans = fact[n]; int den = (fact[n - r] * 1LL * fact[r]) % M; return (ans * binExp(den, M - 2, M)) % M; }\n                                        int power(int a, int b, int mod) { if(b == 0) { return 1; } int res = power(a, b/2, mod); if(b & 1) { return (a * res * res) % mod; } else { return (res * res) % mod; }}\n                                        bool prime_factors_one(int n) { bool f=0; for(int i = 3; i<= n; i+=2) { if(n % i == 0){f=1;break;} }  return f; }\n                                        bool divisors_check(int n) { bool f=false; for(int i = 3; i*i <= n; i+=i) { if(n % i == 0) { f=true;break;} } return f; }\n                                        bool ts(int k,vi &v){ int l = 0; int r = v.size()-1; while(l<r){ int m1 = l + ((r-l)/3); int m2 = r - ((r-l)/3); if(v[m1]==k || v[m2]==k) return 1; if(v[m1]<k) l = m1+1; else if(v[m2]>k) r = m2-1; else { l = m1+1; r = m2-1;}} return 0;}\n\n                                    \n                                    \n\n                                    void print_q(deque<int> q){\n                                        while(!q.empty()){\n                                        cout<<q.front()<<\" \";\n                                        q.pop_front();   \n                                        }\n                                        cout<<endl;\n                                    }\n\n                                \n\n\n                                    void solve(){ \n                                        mks\n                                        int n = s.size();\n\n\n                                        string ns;\n                                        int ind=0;\n                                    \n                                        bool f=0;\n                                        for(int i=1;i<n-1;i++){\n                                            if(s[i]=='0'){\n                                                f=1;\n                                                break;\n                                            }\n                                        }\n\n                                        if(f){\n                                            c(\"NO\")\n                                            return;\n                                        }\n                             \n                                        \n                                        if(s[n-1]!='9' && s[0]=='1'){\n                                            c(\"YES\")\n                                            return;\n                                        }else{\n                                            c(\"NO\")\n                                            return;\n                                        } \n                                \n                                    }\n\n                                            \n                                            \n                                    \n                                    \n\n\n                                        int32_t main()\n                                        {\n                                            ios_base::sync_with_stdio(false);\n                                            cin.tie(NULL);\n                                            \n                                        \n                                            int t;\n                                            cin >> t;\n                                            \n                                        \n                                            while(t--)\n                                            {\n                                                solve();\n                                            }\n                                        \n                                            return 0;\n                                        }\n                                        //      ","output":"YES\nNO\nYES\nYES\nNO\nYES\nNO\nYES\nYES\nNO\nNO\n"}],"testType":"single","input":{"type":"stdin"},"output":{"type":"stdout"},"languages":{"java":{"mainClass":"Main","taskClass":"BLargeAddition"}},"batch":{"id":"b641f6c3-f899-4f41-8efc-709cc5977c3e","size":1},"srcPath":"c:\\Users\\harsh\\Documents\\cp setup\\B_Large_Addition.cpp"}